{"kind":"article","metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"Reorderable"}],"title":"Getting Started"},"hierarchy":{"paths":[["doc:\/\/reorderable.Reorderable\/documentation\/Reorderable"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Installation","anchor":"Installation","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This framework is distributed as a "},{"type":"strong","inlineContent":[{"text":"Swift Package","type":"text"}]},{"text":". To use, add the following URL to your package list:","type":"text"}],"type":"paragraph"},{"code":["https:\/\/github.com\/visfitness\/reorderable"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"To add this package to your XCode project, follow ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/adding-package-dependencies-to-your-app","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Usage","type":"heading","text":"Usage","level":2},{"type":"paragraph","inlineContent":[{"text":"Below are a few samples that showcases","type":"text"}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"All the following sample use the following ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":" for their data","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["private struct Sample: Identifiable {"," var color: UIColor"," var id: UUID = UUID()"," var height: CGFloat"," "," init(_ color: UIColor, _ height: CGFloat) {","   self.color = color","   self.height = height"," }","}"]}],"style":"note","type":"aside"},{"type":"heading","anchor":"Simple-Example","level":3,"text":"Simple Example"},{"code":["struct SimpleExample: View {","  @State var data = [","    Sample(UIColor.systemBlue, 200),","    Sample(UIColor.systemGreen, 100),","    Sample(UIColor.systemGray, 300)","  ]","  ","  var body: some View {","    ReorderableVStack($data) { $sample in","      RoundedRectangle(cornerRadius: 32, style: .continuous)","        .fill(Color(sample.color))","        .frame(height: sample.height)","        .padding()","    }","    .padding()","  }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Using-a-collection-directly-with-onMove","level":3,"type":"heading","text":"Using a collection directly with `onMove`."},{"code":["struct SimpleExample: View {","  @State var data = [","    Sample(UIColor.systemBlue, 200),","    Sample(UIColor.systemGreen, 100),","    Sample(UIColor.systemGray, 300)","  ]","  ","  var body: some View {","    ReorderableVStack(data, onMove: { from, to in","      withAnimation {","        data.move(fromOffsets: IndexSet(integer: from),","                  toOffset: (to > from) ? to + 1 : to)","      }","    }) { sample in","      RoundedRectangle(cornerRadius: 32, style: .continuous)","        .fill(Color(sample.color))","        .frame(height: sample.height)","        .padding()","    }","    .padding()","  }","}"],"type":"codeListing","syntax":"swift"},{"level":3,"type":"heading","anchor":"With-Custom-Drag-Handle-and-Dragging-Effect","text":"With Custom Drag Handle and Dragging Effect"},{"code":["struct SimpleExample: View {","  @State var data = [","    Sample(UIColor.systemBlue, 200),","    Sample(UIColor.systemGreen, 100),","    Sample(UIColor.systemGray, 300)","  ]","  ","  var body: some View {","    ReorderableVStack($data) { $sample, isDragged in \/\/ <------ Notice the additional `isDragged` parameter","      ZStack(alignment: .leading) {","        RoundedRectangle(cornerRadius: 32, style: .continuous)","          .fill(Color(sample.color))","          .frame(height: sample.height)","        ","        Image(systemName: \"line.3.horizontal\")","          .foregroundStyle(.secondary)","          .padding()","          .offset(x: 16)","          \/\/ This will now be the only place users can drag the view from","          .dragHandle() \/\/ <------------","      }","      .scaleEffect(isDragged ? 1.1: 1)","      .animation(.easeOut, value: isDragged)","      .padding()","    }.padding()","  }","}"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"When Part of a ScrollView","type":"heading","anchor":"When-Part-of-a-ScrollView"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Because this package doesn’t rely on SwiftUI’s native "},{"type":"codeVoice","code":"onDrag"},{"text":", it also doesn’t automatically trigger auto-scrolling when users drag the element to the edge of the parent\/ancestor ","type":"text"},{"type":"codeVoice","code":"ScrollView"},{"text":". To enable this behavior, the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/SwiftUI\/ScrollView\/autoScrollOnEdges()"},{"text":" modifier needs to be applied to the ","type":"text"},{"code":"ScrollView","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"Important","style":"important"},{"syntax":"swift","type":"codeListing","code":["struct SimpleExample: View {","  @State var data = [","    Sample(UIColor.systemBlue, 200),","    Sample(UIColor.systemGreen, 200),","    Sample(UIColor.systemGray, 300),","    Sample(UIColor.systemMint, 200),","    Sample(UIColor.systemPurple, 300),","    Sample(UIColor.orange, 200)","  ]","  ","  var body: some View {  ","    ScrollView {","      ReorderableVStack($data) { $sample in","        RoundedRectangle(cornerRadius: 32, style: .continuous)","          .fill(Color(sample.color))","          .frame(height: sample.height)","          .padding()","      }.padding()","    }.autoScrollOnEdges() \/\/ <------- This modifier enables the autoscrolling","  }","}"]},{"level":3,"type":"heading","text":"Nested ReorderableHStack in ReorderableVStack","anchor":"Nested-ReorderableHStack-in-ReorderableVStack"},{"type":"codeListing","syntax":"swift","code":["private struct Sample2D: Identifiable {","  var id: UUID = UUID()","  var row: [Sample]","}","","struct SimpleExample: View {","  @State var data: [Sample2D] = [","    .init(row: [.init(UIColor.systemBlue, 200), .init(UIColor.systemGreen, 100), .init(UIColor.systemGray, 200)]),","    .init(row: [.init(UIColor.systemRed, 200), .init(UIColor.systemMint, 100), .init(UIColor.systemPurple, 200)]),","    .init(row: [.init(UIColor.systemIndigo, 200), .init(UIColor.systemTeal, 100), .init(UIColor.systemYellow, 200)]),","  ]","","  var body: some View {","    ReorderableVStack($data) { $sample in","      HStack {","        ZStack {","          RoundedRectangle(cornerRadius: 24, style: .continuous)","            .fill(Color(UIColor.systemOrange))","            .frame(width: 64, height: 64)","            .padding()","         ","          Image(systemName: \"line.3.horizontal\")","            .foregroundStyle(.secondary)","            .padding()","        }","        .dragHandle()","        ","        ReorderableHStack($sample.row) { $sample in","          RoundedRectangle(cornerRadius: 24, style: .continuous)","            .fill(Color(sample.color))","            .frame(width: 64, height: 64)","            .padding()","        }","      }","    }","  }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/reorderable\/getting-started"]}],"sections":[],"identifier":{"url":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/Getting-Started","interfaceLanguage":"swift"},"references":{"doc://reorderable.Reorderable/documentation/Reorderable/ReorderableHStack":{"role":"symbol","url":"\/documentation\/reorderable\/reorderablehstack","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReorderableHStack","kind":"identifier"}],"title":"ReorderableHStack","type":"topic","abstract":[{"type":"text","text":"A view that arranges its subviews in a horizontal line and allows reordering of its elements by drag and dropping."}],"kind":"symbol","identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/ReorderableHStack","navigatorTitle":[{"text":"ReorderableHStack","kind":"identifier"}]},"doc://reorderable.Reorderable/documentation/Reorderable/SwiftUI/ScrollView/autoScrollOnEdges()":{"url":"\/documentation\/reorderable\/swiftui\/scrollview\/autoscrollonedges()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"autoScrollOnEdges","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/SwiftUI\/ScrollView\/autoScrollOnEdges()","abstract":[{"text":"Enables the ","type":"text"},{"code":"ScrollView","type":"codeVoice"},{"text":" to automatically scroll when the user drags an element from a ","type":"text"},{"identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/ReorderableVStack","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/ReorderableHStack"},{"text":" to its edges.","type":"text"}],"type":"topic","title":"autoScrollOnEdges()","kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Content"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"https://developer.apple.com/documentation/xcode/adding-package-dependencies-to-your-app":{"url":"https:\/\/developer.apple.com\/documentation\/xcode\/adding-package-dependencies-to-your-app","type":"link","titleInlineContent":[{"type":"text","text":"these instructions"}],"title":"these instructions","identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/adding-package-dependencies-to-your-app"},"doc://reorderable.Reorderable/documentation/Reorderable/ReorderableVStack":{"identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable\/ReorderableVStack","abstract":[{"type":"text","text":"A view that arranges its subviews in a vertical line and allows reordering of its elements by drag and dropping."}],"url":"\/documentation\/reorderable\/reorderablevstack","type":"topic","title":"ReorderableVStack","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReorderableVStack","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ReorderableVStack"}],"kind":"symbol"},"doc://reorderable.Reorderable/documentation/Reorderable":{"role":"collection","url":"\/documentation\/reorderable","kind":"symbol","type":"topic","title":"Reorderable","abstract":[],"identifier":"doc:\/\/reorderable.Reorderable\/documentation\/Reorderable"}}}